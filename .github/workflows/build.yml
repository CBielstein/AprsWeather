name: build

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build:
    name: build
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: DotnetVersion
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
          dotnet-quality: 'ga'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore
        
      - name: Test
        run: dotnet test --configuration Release --no-build --no-restore

      - name: Build client docker image
        run: docker build src --file src/AprsWeatherClient/Dockerfile
      
      - name: Build server docker image
        run: docker build src --file src/AprsWeatherServer/Dockerfile

  deploy:
    name: deploy
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: build

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Set environment variables in app spec
        run: sed -i "s/%APRS_IS_CALLSIGN%/${{ secrets.APRS_IS_CALLSIGN }}/g" .do/app.yaml

      - name: Validate app spec
        run: doctl apps spec validate .do/app.yaml

      - name: Update Infrastructure
        run: doctl apps create --spec .do/app.yaml --upsert true --wait true

      - name: Deploy Code
        run: doctl apps create-deployment ${{ secrets.DO_APP_ID }} --wait true
